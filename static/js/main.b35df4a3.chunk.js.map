{"version":3,"sources":["redux/ducks/counter.js","components/counter.js","App.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","initialState","count","Counter","props","useState","setCount","dispatch","useDispatch","style","backgroundColor","margin","padding","name","onClick","type","App","useSelector","state","counter","className","map","voter","i","persistConfig","key","storage","stateReconciler","autoMergeLevel2","reducers","combineReducers","action","persistedReducer","persistReducer","store","createStore","rootElement","document","getElementById","root","createRoot","persistor","persistStore","render","loading"],"mappings":"0LAAMA,EAAY,YACZC,EAAY,YASZC,EAAe,CACnBC,MAAO,G,OCmBMC,MA1Bf,SAAiBC,GACf,MAA0BC,mBAAS,GAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACMC,EAAWC,cAYjB,OACE,sBACEC,MAAO,CAAEC,gBAAiB,YAAaC,OAAQ,OAAQC,QAAS,QADlE,UAGE,+BACGR,EAAMS,KADT,UACsBX,KAEtB,wBAAQY,QAjBY,WACtBP,EDN4B,CAC9BQ,KAAMhB,ICMJO,EAASJ,EAAQ,IAef,eACA,wBAAQY,QAbY,WACtBP,EDR4B,CAC9BQ,KAAMf,ICQJM,EAASJ,EAAQ,IAWf,mBCFSc,MAnBf,WACE,IAAMd,EAAQe,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQjB,SASnD,OACE,sBAAKkB,UAAU,MAAf,UACE,+CAAkBlB,KAVP,CACb,WACA,UACA,YACA,gBACA,YACA,WAKUmB,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CAAiBV,KAAMS,GAATC,U,yCCbhBC,EAAgB,CACpBC,IAAK,OACLC,YACAC,gBAAiBC,KAGbC,EAAWC,YAAgB,CAC/BX,QHCa,WAAmC,IAAlCD,EAAiC,uDAAzBjB,EAAc8B,EAAW,uCAC/C,OAAQA,EAAOhB,MACb,KAAKhB,EACH,OAAO,2BAAKmB,GAAZ,IAAmBhB,MAAOgB,EAAMhB,MAAQ,IAC1C,KAAKF,EACH,OAAO,2BAAKkB,GAAZ,IAAmBhB,MAAOgB,EAAMhB,MAAQ,IAC1C,QACE,OAAOgB,MGNPc,EAAmBC,YAAeT,EAAeK,GAIxCK,EAFDC,YAAYH,GCTpBI,EAAcC,SAASC,eAAe,QACtCC,EAAOC,qBAAWJ,GAElBK,EAAYC,YAAaR,GAE/BK,EAAKI,OACH,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,cAAD,CAAaU,QAAS,6CAAuBH,UAAWA,EAAxD,SACE,cAAC,EAAD,W","file":"static/js/main.b35df4a3.chunk.js","sourcesContent":["const INCREMENT = \"increment\";\r\nconst DECREMENT = \"decrement\";\r\n\r\nexport const increment = () => ({\r\n  type: INCREMENT\r\n});\r\nexport const decrement = () => ({\r\n  type: DECREMENT\r\n});\r\n\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return { ...state, count: state.count + 1 };\r\n    case DECREMENT:\r\n      return { ...state, count: state.count - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../redux/ducks/counter\";\r\n\r\nfunction Counter(props) {\r\n  const [count, setCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleIncrement = () => {\r\n    dispatch(increment());\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    dispatch(decrement());\r\n    setCount(count - 1);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ backgroundColor: \"lightgrey\", margin: \"10px\", padding: \"10px\" }}\r\n    >\r\n      <h3>\r\n        {props.name} vote: {count}\r\n      </h3>\r\n      <button onClick={handleIncrement}>+</button>\r\n      <button onClick={handleDecrement}>-</button>\r\n    </div>\r\n  );\r\n}\r\nexport default Counter;\r\n","import \"./styles.css\";\nimport Counter from \"./components/counter\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const count = useSelector((state) => state.counter.count);\n  const voters = [\n    \"Fang-wen\",\n    \"Hsi-Wen\",\n    \"Bob Smith\",\n    \"Stephanie Foo\",\n    \"Pohan Lin\",\n    \"John Ho\"\n  ];\n  return (\n    <div className=\"App\">\n      <h1>Total votes: {count}</h1>\n      {voters.map((voter, i) => (\n        <Counter key={i} name={voter} />\n      ))}\n    </div>\n  );\n}\nexport default App;\n","import { createStore, combineReducers } from \"redux\";\r\nimport counterReducer from \"./ducks/counter\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  stateReconciler: autoMergeLevel2\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  counter: counterReducer\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = createStore(persistedReducer);\r\n\r\nexport default store;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nconst persistor = persistStore(store);\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n);\n"],"sourceRoot":""}